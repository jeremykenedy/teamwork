<?php

namespace {{namespace}}Http\Controllers\Teamwork;

use Illuminate\Support\Str;
use App\Http\Controllers\Controller;
use {{namespace}}Http\Requests\Teamwork\TeamStoreRequest;
use {{namespace}}Http\Requests\Teamwork\TeamUpdateRequest;

class TeamController extends Controller
{
    public function __construct()
    {
        $this->middleware('auth');
    }

    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\View\View
     */
    public function index()
    {
        return view('teamwork.index')
            ->with('teams', auth()->user()->teams);
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\View\View
     */
    public function create()
    {
        return view('teamwork.create');
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  TeamStoreRequest $request
     * @return \Illuminate\Routing\Redirector
     */
    public function store(TeamStoreRequest $request)
    {
        $teamModel = config('teamwork.team_model');

        $team = $teamModel::create([
            'name' => $request->name,
            'slug' => Str::slug($request->name),
            'owner_id' => $request->user()->getKey()
        ]);
        $team->slug = Str::slug($request->get('name'));
        $request->user()->attachTeam($team);

        return redirect(route('teams.index'))->with('success', 'Team created successfully!');
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int $id
     * @return \Illuminate\View\View
     */
    public function edit($id)
    {
        $teamModel = config('teamwork.team_model');
        $team = $teamModel::findOrFail($id);

        if (!auth()->user()->isOwnerOfTeam($team)) {
            abort(403);
        }

        return view('teamwork.edit')->withTeam($team);
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  TeamUpdateRequest $request
     * @param  int $id
     * @return \Illuminate\Routing\Redirector
     */
    public function update(TeamUpdateRequest $request, $id)
    {
        $teamModel = config('teamwork.team_model');

        $team = $teamModel::findOrFail($id);
        $team->name = $request->name;
        $team->slug = Str::slug($request->name);
        $team->save();

        return redirect(route('teams.index'))->with('success', 'Team updated successfully!');
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int $id
     * @return \Illuminate\Routing\Redirector
     */
    public function destroy($id)
    {
        $teamModel = config('teamwork.team_model');

        $team = $teamModel::findOrFail($id);
        if (!auth()->user()->isOwnerOfTeam($team)) {
            abort(403);
        }

        $team->delete();

        $userModel = config('teamwork.user_model');
        $userModel::where('current_team_id', $id)
                    ->update(['current_team_id' => null]);

        return redirect(route('teams.index'))->with('success', 'Team has deleted successfully!');
    }
}