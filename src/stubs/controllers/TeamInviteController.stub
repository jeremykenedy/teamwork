<?php

namespace {{namespace}}Http\Controllers\Teamwork;

use Mpociot\Teamwork\TeamInvite;
use Mpociot\Teamwork\TeamworkTeam;
use App\Http\Controllers\Controller;

class TeamInviteController extends Controller
{
    /**
     * @param TeamInviteRequest $request
     * @param TeamworkTeam $team
     * @return RedirectResponse
     */
    public function __invoke(TeamInviteRequest $request, TeamworkTeam $team)
    {
        if ($request->email !== $team->owner->email){
            if( !Teamwork::hasPendingInvite( $request->email, $team) )
            {
                Teamwork::inviteToTeam( $request->email, $team, function( $invite )
                {
                    Mail::send('teamwork.emails.invite', ['team' => $invite->team, 'invite' => $invite], function ($m) use ($invite) {
                        $m->to($invite->email)->subject('Invitation to join team '.$invite->team->name);
                    });
                    // Send email to user
                });
            } else {
                return redirect()->back()->withErrors([
                    'email' => 'The email address is already invited to the team.'
                ]);
            }
        }else {
            return redirect()->back()->withErrors([
                'email' => 'The email address belongs to the team owner. Please, use another one!'
            ]);
        }

        return redirect(route('teams.members.show', $team->id))->with('success', "The invitation for the {$request->email} has been sent successfully");
    }
}
