<?php

namespace {{namespace}}Http\Controllers\Teamwork;

use Mpociot\Teamwork\TeamworkTeam;
use App\Http\Controllers\Controller;
use Illuminate\Support\Facades\Mail;
use Mpociot\Teamwork\Facades\Teamwork;
use {{namespace}}Mail\Teamwork\TeamInviteMember;
use {{namespace}}Http\Requests\Teamwork\TeamInviteRequest;

class TeamInviteController extends Controller
{
    /**
     * @param TeamInviteRequest $request
     * @param TeamworkTeam $team
     * @return \Illuminate\Http\RedirectResponse
     */
    public function __invoke(TeamInviteRequest $request, TeamworkTeam $team)
    {
        if ($request->email !== $team->owner->email) {
            if (!Teamwork::hasPendingInvite($request->email, $team)) {
                Teamwork::inviteToTeam($request->email, $team, function ($invite) {
                    Mail::to($invite->email)->queue(new TeamInviteMember($invite));
                });
            } else {
                return redirect()->back()->withErrors([
                    'email' => 'The email address is already invited to the team.'
                ]);
            }
        } else {
            return redirect()->back()->withErrors([
                'email' => 'The email address belongs to the team owner. Please, use another one!'
            ]);
        }

        return redirect(route('teams.members.show', $team->id))->with('success', "The invitation for the {$request->email} has been sent successfully");
    }
}
